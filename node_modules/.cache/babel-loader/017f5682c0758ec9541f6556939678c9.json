{"ast":null,"code":"var _jsxFileName = \"/Users/hashlogics/Desktop/vidionpro-client/src/Screens/SIgnIn/SignIn.tsx\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../Redux/Actions/auth';\nimport './style.css';\nconst reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.usernameHandler = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.passwordHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.loginHandler = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      if (email === '') this.setState({\n        emailError: true\n      });else if (reg.test(email) === false) this.setState({\n        invalidEmailError: true\n      });else if (password === '') this.setState({\n        passwordError: true\n      });else {\n        const user = {\n          email,\n          password\n        };\n        console.log(\"The Login User Are: \", user);\n        this.props.login(user);\n        this.props.history.push('/Home');\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      emailError: false,\n      passwordError: false,\n      invalidEmailError: false\n    };\n  }\n\n  render() {\n    const {\n      emailError,\n      passwordError,\n      invalidEmailError\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"MainContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        margin: 25,\n        width: '85%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"Email\",\n      onChange: this.usernameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), emailError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Email Not Empty\"), invalidEmailError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Email Invalid\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"examplePassword\",\n      placeholder: \"Password\",\n      onChange: this.passwordHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), passwordError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Password Not Empty\"), React.createElement(Button, {\n      theme: \"info\",\n      onClick: this.loginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"div\", {\n      className: \"RegisterAccount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"Account\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Don't Have Account?\"), React.createElement(Button, {\n      theme: \"info\",\n      onClick: () => {\n        this.props.history.push('/signup');\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Register\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: user => dispatch(loginUser(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/hashlogics/Desktop/vidionpro-client/src/Screens/SIgnIn/SignIn.tsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Alert","connect","loginUser","reg","SignIn","constructor","props","usernameHandler","event","setState","email","target","value","passwordHandler","password","loginHandler","state","emailError","test","invalidEmailError","passwordError","user","console","log","login","history","push","render","margin","width","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../Redux/Actions/auth';\nimport { AuthState, User } from '../../Redux/Types/auth';\nimport './style.css';\n\nconst reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\ntype IProps = {\n  navigation: any;\n  auth: AuthState\n  login: (user: object) => void;\n  history: any;\n};\ntype IState = {\n  email: string;\n  password: string;\n  emailError: boolean;\n  passwordError: boolean;\n  invalidEmailError: boolean;\n};\nclass SignIn extends Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      emailError: false,\n      passwordError: false,\n      invalidEmailError: false,\n    };\n  }\n\n  usernameHandler = (event: any) => {\n    this.setState({\n      email: event.target.value\n    })\n  }\n\n  passwordHandler = (event: any) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n  loginHandler = () => {\n    const { email, password } = this.state;\n    if (email === '') this.setState({ emailError: true });\n    else if (reg.test(email) === false) this.setState({ invalidEmailError: true });\n    else if (password === '') this.setState({ passwordError: true });\n    else {\n      const user = {\n        email,\n        password\n      };\n      console.log(\"The Login User Are: \", user);\n      this.props.login(user);\n      this.props.history.push('/Home')\n    }\n  }\n  render() {\n    const { emailError, passwordError, invalidEmailError } = this.state;\n\n    return (\n      <>\n        <div className='MainContainer'>\n          <Form style={{ margin: 25, width: '85%' }}>\n            <FormGroup>\n              <Label for=\"exampleEmail\" >Email</Label>\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email\"\n                onChange={this.usernameHandler}\n              />\n            </FormGroup>\n            {emailError &&\n              <Alert color=\"danger\">\n                Email Not Empty\n             </Alert>\n            }\n            {invalidEmailError &&\n              <Alert color=\"danger\">\n                Email Invalid\n             </Alert>\n            }\n            <FormGroup>\n              <Label for=\"examplePassword\" >Password</Label>\n              <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password\"\n                onChange={this.passwordHandler}\n              />\n            </FormGroup>\n            {passwordError &&\n              <Alert color=\"danger\">\n                Password Not Empty\n             </Alert>\n            }\n            <Button theme=\"info\" onClick={this.loginHandler}>Login</Button>\n          <div className='RegisterAccount'>\n            <p className=\"Account\">Don't Have Account?</p>\n            <Button theme=\"info\" onClick={() => { this.props.history.push('/signup') }}>Register</Button>\n          </div>\n          </Form>\n        </div>\n\n      </>\n    );\n  }\n}\nconst mapStateToProps = (state: any) => {\n  return {\n    auth: state.auth\n  };\n};\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    login: (user: User) => dispatch(loginUser(user))\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);"]},"metadata":{},"sourceType":"module"}