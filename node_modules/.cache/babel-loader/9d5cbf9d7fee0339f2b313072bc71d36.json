{"ast":null,"code":"var _jsxFileName = \"/Users/hashlogics/Desktop/vidionpro-client/src/authentication.tsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nexport default function requireAuthentication(Component) {\n  class AuthenticatedComponent extends React.Component {\n    constructor(...args) {\n      super(...args);\n\n      this.isAuthenticated = () => {\n        return this.props.auth.loggedInStatus;\n      };\n    }\n\n    /**\n     * Render\n     */\n    render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.isAuthenticated() === true ? React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })) : this.props.history.push('/signin'));\n    }\n\n  }\n\n  ;\n\n  const mapStateToProps = state => {\n    console.log(\"The Auth sate\", state.auth);\n    return {\n      auth: state.auth\n    };\n  };\n\n  return connect(mapStateToProps)(AuthenticatedComponent);\n}","map":{"version":3,"sources":["/Users/hashlogics/Desktop/vidionpro-client/src/authentication.tsx"],"names":["React","connect","requireAuthentication","Component","AuthenticatedComponent","isAuthenticated","props","auth","loggedInStatus","render","history","push","mapStateToProps","state","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AASA,eAAe,SAASC,qBAAT,CAA+BC,SAA/B,EAA+C;AAC1D,QAAMC,sBAAN,SAAqCJ,KAAK,CAACG,SAA3C,CAAqE;AAAA;AAAA;;AAAA,WAWjEE,eAXiE,GAW/C,MAAM;AACpB,eAAO,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,cAAvB;AACH,OAbgE;AAAA;;AAejE;;;AAGAC,IAAAA,MAAM,GAAG;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,eAAL,OAA2B,IAA3B,GAAkC,oBAAC,SAAD,oBAAe,KAAKC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlC,GAAkE,KAAKA,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,SAAxB,CADvE,CADJ;AAKH;;AAxBgE;;AAyBpE;;AACD,QAAMC,eAAe,GAAIC,KAAD,IAAgB;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BF,KAAK,CAACN,IAAlC;AACA,WAAO;AACHA,MAAAA,IAAI,EAAEM,KAAK,CAACN;AADT,KAAP;AAGH,GALD;;AAMA,SAAON,OAAO,CAACW,eAAD,CAAP,CAAyBR,sBAAzB,CAAP;AACH","sourcesContent":["import React from \"react\";\nimport { connect } from 'react-redux';\nimport { AuthState } from '../src/Redux/Types/auth';\n\ntype IProps = {\n    auth: AuthState;\n    history:any;\n};\ntype IState = {\n};\nexport default function requireAuthentication(Component: any) {\n    class AuthenticatedComponent extends React.Component<IProps, IState> {\n\n        /**\n         * Check if the user is authenticated, this.props.isAuthenticated\n         * has to be set from your application logic (or use react-redux to retrieve it from global state).\n         */\n        // componentDidMount(){\n        //     !this.isAuthenticated() && this.props.history.push('/signin') \n        // }\n\n\n        isAuthenticated = () => {\n            return this.props.auth.loggedInStatus;\n        }\n\n        /**\n         * Render\n         */\n        render() {\n            return (\n                <div>\n                    {this.isAuthenticated() === true ? <Component {...this.props} /> : this.props.history.push('/signin')}\n                </div>\n            );\n        }\n    };\n    const mapStateToProps = (state: any) => {\n        console.log(\"The Auth sate\",state.auth)\n        return {\n            auth: state.auth\n        };\n    };\n    return connect(mapStateToProps)(AuthenticatedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}