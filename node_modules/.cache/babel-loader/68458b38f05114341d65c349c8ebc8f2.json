{"ast":null,"code":"var _jsxFileName = \"/Users/hashlogics/Desktop/vidionpro-client/src/Screens/SignUp/SignUp.tsx\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nconst reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.usernameHandler = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.passwordHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.loginHandler = () => {\n      const {\n        email,\n        password\n      } = this.state;\n      if (email === '') this.setState({\n        emailError: true\n      });else if (reg.test(email) === false) this.setState({\n        invalidEmailError: true\n      });else if (password === '') this.setState({\n        passwordError: true\n      });else {\n        const user = {\n          email,\n          password\n        };\n        console.log(\"The Login User Are: \", user); // this.props.login(user);\n      }\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      userName: '',\n      emailError: false,\n      passwordError: false,\n      invalidEmailError: false\n    };\n  }\n\n  render() {\n    const {\n      emailError,\n      passwordError,\n      invalidEmailError\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        marginTop: '5%',\n        marginLeft: '40%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        width: '30%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"Email\",\n      onChange: this.usernameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), emailError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Email Not Empty\"), invalidEmailError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Email Invalid\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"examplePassword\",\n      placeholder: \"Password\",\n      onChange: this.passwordHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), passwordError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Password Not Empty\"), React.createElement(Button, {\n      theme: \"info\",\n      onClick: this.loginHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nconst style = {\n  margin: 15\n};\nexport default SignUp;","map":{"version":3,"sources":["/Users/hashlogics/Desktop/vidionpro-client/src/Screens/SignUp/SignUp.tsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Alert","reg","SignUp","constructor","props","usernameHandler","event","setState","email","target","value","passwordHandler","password","loginHandler","state","emailError","test","invalidEmailError","passwordError","user","console","log","firstName","lastName","confirmPassword","userName","render","marginTop","marginLeft","width","style","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\n\nconst reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\ntype IProps = {\n  navigation: any;\n};\ntype IState = {\n  userName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  emailError: boolean;\n  passwordError: boolean;\n  invalidEmailError: boolean;\n};\nclass SignUp extends Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      userName: '',\n      emailError: false,\n      passwordError: false,\n      invalidEmailError: false,\n    };\n  }\n\n  usernameHandler = (event: any) => {\n    this.setState({\n      email: event.target.value\n    })\n  }\n\n  passwordHandler = (event: any) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n  loginHandler = () => {\n    const { email, password } = this.state;\n    if (email === '') this.setState({ emailError: true });\n    else if (reg.test(email) === false) this.setState({ invalidEmailError: true });\n    else if (password === '') this.setState({ passwordError: true });\n    else {\n      const user = {\n        email,\n        password\n      };\n      console.log(\"The Login User Are: \", user);\n      // this.props.login(user);\n    }\n  }\n  render() {\n    const { emailError, passwordError, invalidEmailError } = this.state;\n\n    return (\n      <>\n        <div style={{ marginTop: '5%', marginLeft: '40%' }}>\n          <Form style={{ width: '30%' }}>\n            <FormGroup>\n              <Label for=\"exampleEmail\" >Email</Label>\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email\"\n                onChange={this.usernameHandler}\n              />\n            </FormGroup>\n            {emailError &&\n              <Alert color=\"danger\">\n                Email Not Empty\n             </Alert>\n            }\n            {invalidEmailError &&\n              <Alert color=\"danger\">\n                Email Invalid\n             </Alert>\n            }\n            <FormGroup>\n              <Label for=\"examplePassword\" >Password</Label>\n              <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password\"\n                onChange={this.passwordHandler}\n              />\n            </FormGroup>\n            {passwordError &&\n              <Alert color=\"danger\">\n                Password Not Empty\n             </Alert>\n            }\n            <Button theme=\"info\" onClick={this.loginHandler}>Login</Button>\n          </Form>\n        </div>\n\n\n      </>\n    );\n  }\n}\nconst style = {\n  margin: 15,\n};\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}