{"ast":null,"code":"import { put, takeEvery } from 'redux-saga/effects';\nimport { types } from '../../Types/register';\nimport { register } from './api';\n\nfunction* registerUser(action) {\n  try {\n    const result = yield register(action.payload);\n    console.log('result Response', result);\n\n    if (result.status === 201) {\n      console.log(\"result\", result);\n      yield put({\n        type: types.REGISTRATION_SUCCESS,\n        payload: result.message\n      });\n      alert(\"SignUp Successfully\");\n    } else {\n      yield put({\n        type: types.REGISTRATION_FAILURE,\n        payload: result.message\n      }); // Alert.alert(result.message.message.toString());\n\n      alert(\"Error\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* registerhWatcher() {\n  yield takeEvery(types.REGISTRATION_REQUEST, registerUser);\n}","map":{"version":3,"sources":["/Users/hashlogics/Desktop/vidionpro-client/src/Redux/Sagas/register/index.ts"],"names":["put","takeEvery","types","register","registerUser","action","result","payload","console","log","status","type","REGISTRATION_SUCCESS","message","alert","REGISTRATION_FAILURE","error","registerhWatcher","REGISTRATION_REQUEST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,QAA+B,oBAA/B;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AACA,UAAUC,YAAV,CAAuBC,MAAvB,EAAoC;AAChC,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMH,QAAQ,CAACE,MAAM,CAACE,OAAR,CAA7B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA8BH,MAA9B;;AACA,QAAIA,MAAM,CAACI,MAAP,KAAkB,GAAtB,EAA2B;AACvBF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBH,MAAtB;AACA,YAAMN,GAAG,CAAC;AAAEW,QAAAA,IAAI,EAAET,KAAK,CAACU,oBAAd;AAAoCL,QAAAA,OAAO,EAAED,MAAM,CAACO;AAApD,OAAD,CAAT;AACAC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACH,KAJD,MAKK;AACD,YAAMd,GAAG,CAAC;AAAEW,QAAAA,IAAI,EAAET,KAAK,CAACa,oBAAd;AAAoCR,QAAAA,OAAO,EAAED,MAAM,CAACO;AAApD,OAAD,CAAT,CADC,CAED;;AACAC,MAAAA,KAAK,CAAC,OAAD,CAAL;AACH;AACJ,GAbD,CAaE,OAAOE,KAAP,EAAc;AACZR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AACH;AACJ;;AACD,OAAO,UAAUC,gBAAV,GAA6B;AAChC,QAAMhB,SAAS,CAACC,KAAK,CAACgB,oBAAP,EAA6Bd,YAA7B,CAAf;AACH","sourcesContent":["import { put, takeEvery } from 'redux-saga/effects';\nimport { types } from '../../Types/register';\nimport { register } from './api';\nfunction* registerUser(action: any) {\n    try {\n        const result = yield register(action.payload);\n        console.log('result Response',result)\n        if (result.status === 201) {\n            console.log(\"result\", result)\n            yield put({ type: types.REGISTRATION_SUCCESS, payload: result.message });\n            alert(\"SignUp Successfully\")\n        }\n        else {\n            yield put({ type: types.REGISTRATION_FAILURE, payload: result.message });\n            // Alert.alert(result.message.message.toString());\n            alert(\"Error\")\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\nexport function* registerhWatcher() {\n    yield takeEvery(types.REGISTRATION_REQUEST, registerUser);\n}\n"]},"metadata":{},"sourceType":"module"}