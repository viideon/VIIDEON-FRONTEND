{"ast":null,"code":"var _jsxFileName = \"/Users/hashlogics/Desktop/vidionpro-client/src/Screens/SignUp/SignUp.tsx\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\nconst reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.userNameHandler = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.firstNameHandler = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.lastNameHandler = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.emailHandler = event => {\n      this.setState({\n        userName: event.target.value\n      });\n    };\n\n    this.passwordHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.confirmPasswordHandler = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.registerHandler = () => {\n      const {\n        firstName,\n        lastName,\n        userName,\n        email,\n        password,\n        confirmPassword\n      } = this.state;\n      if (firstName === '') this.setState({\n        firstError: true\n      });else if (lastName === '') this.setState({\n        lastError: true\n      });else if (userName === '') this.setState({\n        userNameError: true\n      });else if (email === '') this.setState({\n        emailError: true\n      });else if (reg.test(email) === false) this.setState({\n        invalidEmailError: true\n      });else if (password === '') this.setState({\n        passwordError: true\n      });else if (confirmPassword === '') this.setState({\n        confirmPasswordError: true\n      });else if (password !== confirmPassword) this.setState({\n        c_passwordError: true\n      });else {\n        const user = {\n          email,\n          password\n        };\n        console.log(\"The Login User Are: \", user); // this.props.login(user);\n      }\n    };\n\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      userName: '',\n      emailError: false,\n      passwordError: false,\n      invalidEmailError: false,\n      c_passwordError: false,\n      firstError: false,\n      lastError: false,\n      userNameError: false,\n      confirmPasswordError: false\n    };\n  }\n\n  render() {\n    const {\n      firstError,\n      lastError,\n      emailError,\n      passwordError,\n      confirmPasswordError,\n      c_passwordError,\n      invalidEmailError,\n      userNameError\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      style: {\n        marginTop: '5%',\n        marginLeft: '40%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Form, {\n      style: {\n        width: '30%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"First Name\",\n      onChange: this.firstNameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), firstError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"First Name Not Empty\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"Last Name\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"Last Name\",\n      onChange: this.lastNameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), lastError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Last Name Not Empty\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"UserName\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"UserName\",\n      onChange: this.userNameHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), userNameError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"UserName Not Empty\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      placeholder: \"Email\",\n      onChange: this.emailHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })), emailError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Email Not Empty\"), invalidEmailError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Email Invalid\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"examplePassword\",\n      placeholder: \"Password\",\n      onChange: this.passwordHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), passwordError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Password Not Empty\"), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Confrim Password\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      id: \"examplePassword\",\n      placeholder: \"Confrim Password\",\n      onChange: this.confirmPasswordHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), confirmPasswordError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, \"Confrim Password Not Empty\"), c_passwordError && React.createElement(Alert, {\n      color: \"danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Password Not Matched\"), React.createElement(Button, {\n      theme: \"info\",\n      onClick: this.registerHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Login\"))));\n  }\n\n}\n\nconst style = {\n  margin: 15\n};\nexport default SignUp;","map":{"version":3,"sources":["/Users/hashlogics/Desktop/vidionpro-client/src/Screens/SignUp/SignUp.tsx"],"names":["React","Component","Button","Form","FormGroup","Label","Input","Alert","reg","SignUp","constructor","props","userNameHandler","event","setState","userName","target","value","firstNameHandler","lastNameHandler","emailHandler","passwordHandler","password","confirmPasswordHandler","registerHandler","firstName","lastName","email","confirmPassword","state","firstError","lastError","userNameError","emailError","test","invalidEmailError","passwordError","confirmPasswordError","c_passwordError","user","console","log","render","marginTop","marginLeft","width","style","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input, Alert } from 'reactstrap';\n\nconst reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\ntype IProps = {\n  navigation: any;\n};\ntype IState = {\n  userName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n  firstName: string;\n  lastName: string;\n  emailError: boolean;\n  passwordError: boolean;\n  invalidEmailError: boolean;\n  c_passwordError:boolean;\n  firstError:boolean;\n  lastError:boolean;\n  userNameError:boolean;\n  confirmPasswordError:boolean;\n};\nclass SignUp extends Component<IProps, IState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      userName: '',\n      emailError: false,\n      passwordError: false,\n      invalidEmailError: false,\n      c_passwordError: false,\n      firstError: false,\n      lastError: false,\n      userNameError: false,\n      confirmPasswordError: false,\n    };\n  }\n\n  userNameHandler = (event: any) => {\n    this.setState({\n      userName: event.target.value\n    })\n  }\n  firstNameHandler = (event: any) => {\n    this.setState({\n      userName: event.target.value\n    })\n  }\n  lastNameHandler = (event: any) => {\n    this.setState({\n      userName: event.target.value\n    })\n  }\n  emailHandler = (event: any) => {\n    this.setState({\n      userName: event.target.value\n    })\n  }\n\n  passwordHandler = (event: any) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n  confirmPasswordHandler = (event: any) => {\n    this.setState({\n      password: event.target.value\n    })\n  }\n  registerHandler = () => {\n    const { firstName, lastName, userName, email, password, confirmPassword } = this.state;\n    if (firstName === '') this.setState({ firstError: true });\n    else if (lastName === '') this.setState({ lastError: true });\n    else if (userName === '') this.setState({ userNameError: true });\n    else if (email === '') this.setState({ emailError: true });\n    else if (reg.test(email) === false) this.setState({ invalidEmailError: true });\n    else if (password === '') this.setState({ passwordError: true });\n    else if (confirmPassword === '') this.setState({ confirmPasswordError: true });\n    else if (password !== confirmPassword) this.setState({ c_passwordError: true });\n    else {\n      const user = {\n        email,\n        password\n      };\n      console.log(\"The Login User Are: \", user);\n      // this.props.login(user);\n    }\n  }\n  render() {\n    const { firstError, lastError, emailError, passwordError, confirmPasswordError, c_passwordError, invalidEmailError, userNameError } = this.state;\n    return (\n      <>\n        <div style={{ marginTop: '5%', marginLeft: '40%' }}>\n          <Form style={{ width: '30%' }}>\n          <FormGroup>\n              <Label for=\"exampleEmail\" >First Name</Label>\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"First Name\"\n                onChange={this.firstNameHandler}\n              />\n            </FormGroup>\n            {firstError &&\n              <Alert color=\"danger\">\n                First Name Not Empty\n             </Alert>\n            }\n            <FormGroup>\n              <Label for=\"exampleEmail\" >Last Name</Label>\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Last Name\"\n                onChange={this.lastNameHandler}\n              />\n            </FormGroup>\n            {lastError &&\n              <Alert color=\"danger\">\n                Last Name Not Empty\n             </Alert>\n            }\n            <FormGroup>\n              <Label for=\"exampleEmail\" >UserName</Label>\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"UserName\"\n                onChange={this.userNameHandler}\n              />\n            </FormGroup>\n            {userNameError &&\n              <Alert color=\"danger\">\n                UserName Not Empty\n             </Alert>\n            }\n            <FormGroup>\n              <Label for=\"exampleEmail\" >Email</Label>\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" placeholder=\"Email\"\n                onChange={this.emailHandler}\n              />\n            </FormGroup>\n            {emailError &&\n              <Alert color=\"danger\">\n                Email Not Empty\n             </Alert>\n            }\n            {invalidEmailError &&\n              <Alert color=\"danger\">\n                Email Invalid\n             </Alert>\n            }\n            <FormGroup>\n              <Label for=\"examplePassword\" >Password</Label>\n              <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Password\"\n                onChange={this.passwordHandler}\n              />\n            </FormGroup>\n            {passwordError &&\n              <Alert color=\"danger\">\n                Password Not Empty\n             </Alert>\n            }\n            <FormGroup>\n              <Label for=\"examplePassword\" >Confrim Password</Label>\n              <Input type=\"password\" name=\"password\" id=\"examplePassword\" placeholder=\"Confrim Password\"\n                onChange={this.confirmPasswordHandler}\n              />\n            </FormGroup>\n            {confirmPasswordError &&\n              <Alert color=\"danger\">\n               Confrim Password Not Empty\n             </Alert>\n            }\n            {c_passwordError &&\n              <Alert color=\"danger\">\n                Password Not Matched\n             </Alert>\n            }\n            <Button theme=\"info\" onClick={this.registerHandler}>Login</Button>\n          </Form>\n        </div>\n\n\n      </>\n    );\n  }\n}\nconst style = {\n  margin: 15,\n};\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}